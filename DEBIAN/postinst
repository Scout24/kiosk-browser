#!/bin/bash
set -e 

# make lintian happy
. /usr/share/debconf/confmodule
db_stop


if getent passwd kiosk-browser >/dev/null; then
    usermod --groups video,audio kiosk-browser
else
    useradd --system --user-group --groups video,audio --comment "Kiosk Browser User" --no-create-home --home-dir /var/lib/kiosk-browser kiosk-browser
    mkdir -p /var/lib/kiosk-browser
fi

# disable lightdm and enable nodm
echo "/usr/sbin/nodm" >/etc/X11/default-display-manager
# lightdm needs this for the debconf stuff because it uses kiosk-browser as a display manager
ln -sf nodm /usr/sbin/kiosk-browser

cat >/etc/default/nodm <<EOF
# nodm configuration for kiosk-browser package
#
# Note: Must be sh compatible!

if type plymouth >/dev/null 2>&1 ; then
    plymouth quit || : # disable plymouth on Ubuntu, it prevents restarting the kiosk-browser
fi

NODM_ENABLED=true
NODM_USER=kiosk-browser
NODM_FIRST_VT='7'
NODM_XSESSION="exec /usr/share/kiosk-browser/xsession.sh"
NODM_X_OPTIONS="-nocursor -nolisten tcp"
NODM_MIN_SESSION_TIME=60

EOF

# if lightdm is running stop it first (only on Ubuntu)
# Maybe we should first ask the user?
if test -r /etc/init/lightdm.conf && invoke-rc.d lightdm status ; then
    invoke-rc.d lightdm stop || :
    sleep 5 # give it a moment to stop everything
fi

if pgrep -u kiosk-browser >/dev/null ; then
    invoke-rc.d nodm stop || :
    pkill -TERM -u kiosk-browser || :
    echo "Waiting for kiosk-browser processes to exit..."
    sleep 5 # wait for chromium and other subprocesses to exit
fi

# always start nodm
invoke-rc.d nodm start
